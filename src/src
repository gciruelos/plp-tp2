% Prolog vieja

% ej. 1
herramienta(rayo, 10).
herramienta(volatilizador, 40).
herramienta(encendedor, 5).

jerarquica(X, Y) :- (herramienta(X, _); X = jerarquica(_, _)), (herramienta(Y, _); Y = jerarquica(_, _)).

%no se si esta bien decir esto, porque una herramienta no es una composicion:
composicion(X, P, 1):- herramienta(X, P).
composicion(binaria(X,Y),P,5):- herramienta(X, PX), herramienta(Y, PY), X\=encendedor, P is 2*PX + PY.
composicion(jerarquica(X, Y), P, C) :- composicion(X, PX, CX), composicion(Y, PY, CY), P is PY * PX, C is 2*(CY+CX).

% ej. 2


%permute(+, ?)
permute([], []).
permute(L,[X|R]) :- omit(X,L,M), permute(M,R).

%omit(?, +, ?)
omit(H,[H|T],T).
omit(X,[H|L],[H|R]) :- omit(X,L,R), X \= H.

% componentes(+Z, ?CZ)
componentes(Z, [Z]) :- herramienta(Z, _).
componentes(binaria(X,Y), [X,Y]) :- herramienta(X, _), herramienta(Y, _).
componentes(jerarquica(X, Y), CZ) :- CZ \= [], append(CX, CY, CZ), CX \= [], CY \= [], componentes(X, CX), componentes(Y, CY).


% configuracion(?, ?, ?, ?)
configuracion([X], X, P, 1) :- herramienta(X, P).
configuracion(M, Conf, P, C) :- permute(M, M1), componentes(Conf, M1), composicion(Conf, P, C).

% ej. 3
% masPoderosa(+M1, +M2)
masPoderosa(M1,M2) :- configuracion(M1, _, P, _), forall(configuracion(M2, _, PPrima, _), P > PPrima).

% ej. 4
% mejor(+M1, +M2)
mejor(M1, M2) :- forall(configuracion(M2, _, C2, P2), (configuracion(M1, _, C1, P1), P1 >= P2, C1 < C2)).

% ej. 5
confP(M, A, _, _) :- configuracion(M, A, _, _), !.
concatComponentes([C], X) :- configuracion(X, C, _, _).
%concatComponentes([A | B], X) :- M \= [], configuracion(M, A, _, _), concatComponentes(B, Y), append(M, Y, X).
